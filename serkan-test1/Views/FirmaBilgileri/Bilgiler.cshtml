@model serkan_test1.Models.FirmaBilgileriViewModel
@{
    ViewData["Title"] = "Firma Bilgileri";
}

<style>
    /* Inline CSS - Boşlukları hemen azaltmak için */
    .list-group-item {
        padding: 0.05rem 0.25rem !important;
        margin: 0 !important;
    }

        .list-group-item .flex-grow-1 {
            margin-right: 0.05rem !important;
        }

        .list-group-item .ms-2 {
            margin-left: 0.05rem !important;
        }

    .vergi-bilgileri .list-group-item {
        padding: 0.02rem 0.15rem !important;
    }

    .vergi-bilgileri .col-md-4 {
        flex: 1 !important;
        min-width: 0 !important;
    }

    .vergi-bilgileri .row {
        margin: 0 !important;
    }

    .vergi-bilgileri .col-md-4 {
        padding: 0 !important;
        border-right: 1px solid #f0f0f0;
    }

        .vergi-bilgileri .col-md-4:last-child {
            border-right: none;
        }
</style>

<div class="container-fluid p-3">
    <!-- Header -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h4 class="mb-1 text-dark fw-bold">Firma Bilgileri</h4>
                    <p class="text-muted mb-0 small">Kurumsal bilgilerinizi görüntüleyin ve yönetin</p>
                </div>
            </div>
        </div>
    </div>

    @if (ViewBag.TalepMesaj != null)
    {
        <div class="alert alert-success alert-dismissible fade show py-2 mb-3" role="alert">
            <i class="bi bi-check-circle me-2"></i>@ViewBag.TalepMesaj
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Uyarı Mesajı -->
    <div class="row mb-3" id="uyariMesaji" style="display: none;">
        <div class="col-12">
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-triangle me-2"></i>
                <strong>Önemli:</strong> * işaretli alanlar için belge yüklenmesi gereklidir. 
                Belge yüklenmeyen talepler olumsuz sonuçlanabilir.
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    </div>

    <!-- Düzenle Butonu -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="d-flex justify-content-end">
                <button type="button" class="btn btn-primary" id="duzenleBtn" onclick="duzenleModunuAc()">
                    <i class="bi bi-pencil me-2"></i>Düzenle
                </button>
            </div>
        </div>
    </div>

    <div class="row g-3">
        <!-- Firma Bilgileri -->
        <div class="col-lg-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-primary bg-gradient text-white border-0 py-2">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-building me-2"></i>
                        <h6 class="mb-0 fw-semibold">Genel Bilgiler</h6>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="list-group list-group-flush">
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-building text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">Firma Adı*</div>
                                    <div class="fw-medium small" id="firmaAdiDisplay">@(!string.IsNullOrWhiteSpace(Model.FirmaAdi) ? Model.FirmaAdi : "-")</div>
                                    <input type="text" class="form-control form-control-sm d-none" id="firmaAdiInput" value="@Model.FirmaAdi" data-original="@Model.FirmaAdi" data-requires-document="true">
                                </div>
                            </div>
                        </div>
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-briefcase text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">Firma Unvanı</div>
                                    <div class="fw-medium small" id="firmaUnvaniDisplay">@(!string.IsNullOrWhiteSpace(Model.FirmaUnvani) ? Model.FirmaUnvani : "-")</div>
                                    <input type="text" class="form-control form-control-sm d-none" id="firmaUnvaniInput" value="@Model.FirmaUnvani" data-original="@Model.FirmaUnvani" data-requires-document="false">
                                </div>
                            </div>
                        </div>
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-tag text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">Firma Tipi</div>
                                    <div class="fw-medium small" id="firmaTipiDisplay">@(!string.IsNullOrWhiteSpace(Model.FirmaTipi) ? Model.FirmaTipi : "-")</div>
                                    <input type="text" class="form-control form-control-sm d-none" id="firmaTipiInput" value="@Model.FirmaTipi" data-original="@Model.FirmaTipi" data-requires-document="false">
                                </div>
                            </div>
                        </div>
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-globe text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">Domain*</div>
                                    <div class="fw-medium small" id="domainDisplay">@(!string.IsNullOrWhiteSpace(Model.Domain) ? Model.Domain : "-")</div>
                                    <input type="text" class="form-control form-control-sm d-none" id="domainInput" value="@Model.Domain" data-original="@Model.Domain" data-requires-document="true">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Yetkili Kişi Bilgileri -->
        <div class="col-lg-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-success bg-gradient text-white border-0 py-2">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-person-badge me-2"></i>
                        <h6 class="mb-0 fw-semibold">Yetkili Kişi</h6>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="list-group list-group-flush">
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-person text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">Ad*</div>
                                    <div class="fw-medium small" id="yetkiliAdiDisplay">@(!string.IsNullOrWhiteSpace(Model.YetkiliAdi) ? Model.YetkiliAdi : "-")</div>
                                    <input type="text" class="form-control form-control-sm d-none" id="yetkiliAdiInput" value="@Model.YetkiliAdi" data-original="@Model.YetkiliAdi" data-requires-document="true">
                                </div>
                            </div>
                        </div>
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-person text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">Soyad*</div>
                                    <div class="fw-medium small" id="yetkiliSoyadiDisplay">@(!string.IsNullOrWhiteSpace(Model.YetkiliSoyadi) ? Model.YetkiliSoyadi : "-")</div>
                                    <input type="text" class="form-control form-control-sm d-none" id="yetkiliSoyadiInput" value="@Model.YetkiliSoyadi" data-original="@Model.YetkiliSoyadi" data-requires-document="true">
                                </div>
                            </div>
                        </div>
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-card-text text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">TC Kimlik No*</div>
                                    <div class="fw-medium small" id="yetkiliTCNoDisplay">@(!string.IsNullOrWhiteSpace(Model.YetkiliTCNo) ? Model.YetkiliTCNo : "-")</div>
                                    <input type="text" class="form-control form-control-sm d-none" id="yetkiliTCNoInput" value="@Model.YetkiliTCNo" data-original="@Model.YetkiliTCNo" data-requires-document="true">
                                </div>
                            </div>
                        </div>
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-lock text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">Şifre</div>
                                    <div class="fw-medium small" id="sifreDisplay">@(string.IsNullOrWhiteSpace(Model.Sifre) ? "-" : "••••••••")</div>
                                    <input type="password" class="form-control form-control-sm d-none" id="sifreInput" value="@Model.Sifre" data-original="@Model.Sifre" data-requires-document="false">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- İletişim Bilgileri -->
        <div class="col-lg-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-info bg-gradient text-white border-0 py-2">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-telephone me-2"></i>
                        <h6 class="mb-0 fw-semibold">İletişim Bilgileri</h6>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="list-group list-group-flush">
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-phone text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">Cep Telefonu</div>
                                    <div class="fw-medium small" id="cepTelefonuDisplay">@(!string.IsNullOrWhiteSpace(Model.CepTelefonu) ? Model.CepTelefonu : "-")</div>
                                    <input type="text" class="form-control form-control-sm d-none" id="cepTelefonuInput" value="@Model.CepTelefonu" data-original="@Model.CepTelefonu" data-requires-document="false">
                                </div>
                            </div>
                        </div>
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-envelope text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">E-Posta</div>
                                    <div class="fw-medium small" id="ePostaDisplay">@(!string.IsNullOrWhiteSpace(Model.EPosta) ? Model.EPosta : "-")</div>
                                    <input type="email" class="form-control form-control-sm d-none" id="ePostaInput" value="@Model.EPosta" data-original="@Model.EPosta" data-requires-document="false">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Adres Bilgileri -->
        <div class="col-lg-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-warning bg-gradient text-dark border-0 py-2">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-geo-alt me-2"></i>
                        <h6 class="mb-0 fw-semibold">Adres Bilgileri</h6>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="list-group list-group-flush">
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-flag text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">Ülke</div>
                                    <div class="fw-medium small" id="ulkeDisplay">@(!string.IsNullOrWhiteSpace(Model.Ulke) ? Model.Ulke : "-")</div>
                                    <input type="text" class="form-control form-control-sm d-none" id="ulkeInput" value="@Model.Ulke" data-original="@Model.Ulke" data-requires-document="false">
                                </div>
                            </div>
                        </div>
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-geo-alt text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">İl</div>
                                    <div class="fw-medium small" id="ilDisplay">@(!string.IsNullOrWhiteSpace(Model.Il) ? Model.Il : "-")</div>
                                    <input type="text" class="form-control form-control-sm d-none" id="ilInput" value="@Model.Il" data-original="@Model.Il" data-requires-document="false">
                                </div>
                            </div>
                        </div>
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-geo-alt text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">İlçe</div>
                                    <div class="fw-medium small" id="ilceDisplay">@(!string.IsNullOrWhiteSpace(Model.Ilce) ? Model.Ilce : "-")</div>
                                    <input type="text" class="form-control form-control-sm d-none" id="ilceInput" value="@Model.Ilce" data-original="@Model.Ilce" data-requires-document="false">
                                </div>
                            </div>
                        </div>
                        <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                            <div class="d-flex align-items-center flex-grow-1">
                                <div class="me-2">
                                    <i class="bi bi-house text-primary"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="text-muted small mb-0">Mahalle</div>
                                    <div class="fw-medium small" id="mahalleDisplay">@(!string.IsNullOrWhiteSpace(Model.Mahalle) ? Model.Mahalle : "-")</div>
                                    <input type="text" class="form-control form-control-sm d-none" id="mahalleInput" value="@Model.Mahalle" data-original="@Model.Mahalle" data-requires-document="false">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Vergi Bilgileri -->
        <div class="col-12">
            <div class="card border-0 shadow-sm vergi-bilgileri">
                <div class="card-header bg-danger bg-gradient text-white border-0 py-2">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-receipt me-2"></i>
                        <h6 class="mb-0 fw-semibold">Vergi Bilgileri</h6>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="row g-0">
                        <div class="col-lg-4">
                            <div class="list-group list-group-flush">
                                <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                                    <div class="d-flex align-items-center flex-grow-1">
                                        <div class="me-2">
                                            <i class="bi bi-building text-primary"></i>
                                        </div>
                                        <div class="flex-grow-1">
                                            <div class="text-muted small mb-0">Vergi Dairesi İli</div>
                                            <div class="fw-medium small" id="vergiDairesiIlDisplay">@(!string.IsNullOrWhiteSpace(Model.VergiDairesiIl) ? Model.VergiDairesiIl : "-")</div>
                                            <input type="text" class="form-control form-control-sm d-none" id="vergiDairesiIlInput" value="@Model.VergiDairesiIl" data-original="@Model.VergiDairesiIl" data-requires-document="false">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="list-group list-group-flush">
                                <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                                    <div class="d-flex align-items-center flex-grow-1">
                                        <div class="me-2">
                                            <i class="bi bi-bank text-primary"></i>
                                        </div>
                                        <div class="flex-grow-1">
                                            <div class="text-muted small mb-0">Vergi Dairesi</div>
                                            <div class="fw-medium small" id="vergiDairesiDisplay">@(!string.IsNullOrWhiteSpace(Model.VergiDairesi) ? Model.VergiDairesi : "-")</div>
                                            <input type="text" class="form-control form-control-sm d-none" id="vergiDairesiInput" value="@Model.VergiDairesi" data-original="@Model.VergiDairesi" data-requires-document="false">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="list-group list-group-flush">
                                <div class="list-group-item d-flex justify-content-between align-items-center py-2 px-3 border-0">
                                    <div class="d-flex align-items-center flex-grow-1">
                                        <div class="me-2">
                                            <i class="bi bi-hash text-primary"></i>
                                        </div>
                                        <div class="flex-grow-1">
                                            <div class="text-muted small mb-0">Vergi No*</div>
                                            <div class="fw-medium small" id="vergiNoDisplay">@(!string.IsNullOrWhiteSpace(Model.VergiNo) ? Model.VergiNo : "-")</div>
                                            <input type="text" class="form-control form-control-sm d-none" id="vergiNoInput" value="@Model.VergiNo" data-original="@Model.VergiNo" data-requires-document="true">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Alt Butonlar -->
        <div class="col-12" id="altButonlar" style="display: none;">
            <div class="card border-0 shadow-sm mb-3">
                <div class="card-body">
                    <div class="d-flex justify-content-center gap-3">
                        <button type="button" class="btn btn-warning" id="belgeYukleBtn" disabled onclick="belgeYukleModalAc()">
                            <i class="bi bi-upload me-2"></i>Belge Yükle
                        </button>
                        <button type="button" class="btn btn-success" id="kaydetBtn" disabled onclick="degisiklikleriKaydet()">
                            <i class="bi bi-check-circle me-2"></i>Kaydet
                        </button>
                        <button type="button" class="btn btn-secondary" onclick="duzenleModunuKapat()">
                            <i class="bi bi-x-circle me-2"></i>İptal
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Değişiklik Talepleri Listesi -->
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-info bg-gradient text-white border-0 py-2">
                    <div class="d-flex align-items-center justify-content-between">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-list-check me-2"></i>
                            <h6 class="mb-0 fw-semibold">Değişiklik Talepleri</h6>
                        </div>
                        <a href="@Url.Action("TalepListesi", "FirmaBilgileri")" class="btn btn-sm btn-light">
                            <i class="bi bi-arrow-right"></i> Tümünü Görüntüle
                        </a>
                    </div>
                </div>
                <div class="card-body p-0">
                    @{
                        var sonTalepler = ViewBag.SonTalepler as IEnumerable<serkan_test1.Models.DegisiklikTalebi> ?? new List<serkan_test1.Models.DegisiklikTalebi>();
                    }
                    
                    @if (!sonTalepler.Any())
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-inbox text-muted mb-2" style="font-size: 2rem;"></i>
                            <p class="text-muted mb-0">Henüz değişiklik talebi bulunmuyor</p>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-sm table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th class="small">Alan</th>
                                        <th class="small">Yeni Değer</th>
                                        <th class="small">Talep Tarihi</th>
                                        <th class="small">Durum</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var talep in sonTalepler.Take(3))
                                    {
                                        <tr>
                                            <td>
                                                <span class="badge bg-secondary small">@talep.AlanAdi</span>
                                            </td>
                                            <td>
                                                <small class="text-primary fw-medium">@talep.YeniDeger</small>
                                            </td>
                                            <td>
                                                <small class="text-muted">@talep.TalepTarihi.ToString("dd.MM.yyyy")</small>
                                            </td>
                                            <td>
                                                @switch (talep.Durum)
                                                {
                                                                                        case serkan_test1.Models.TalepDurumu.KontrolEdiliyor:
                                        <span class="badge bg-warning small">
                                            <i class="bi bi-clock me-1"></i>Kontrol Ediliyor
                                        </span>
                                                        break;
                                                                                        case serkan_test1.Models.TalepDurumu.Onaylandi:
                                        <span class="badge bg-success small">
                                            <i class="bi bi-check me-1"></i>Onaylandı
                                        </span>
                                                        break;
                                                                                        case serkan_test1.Models.TalepDurumu.Reddedildi:
                                        <span class="badge bg-danger small">
                                            <i class="bi bi-times me-1"></i>Reddedildi
                                        </span>
                                                        break;
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        
                        @if (sonTalepler.Count() > 3)
                        {
                            <div class="text-center py-2 border-top">
                                <small class="text-muted">
                                    Ve @(sonTalepler.Count() - 3) talep daha... 
                                    <a href="@Url.Action("TalepListesi", "FirmaBilgileri")" class="text-decoration-none">Tümünü görüntüle</a>
                                </small>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Düzenlenebilir alanlar için modallar -->
@await Html.PartialAsync("_FirmaDuzenleModallar", Model)

<!-- Değişiklik talebi alanlar için modallar -->
@await Html.PartialAsync("_FirmaTalepModallar", Model)



<!-- Toast Bildirimleri -->
<div class="toast-container position-fixed top-0 end-0 p-3">
    <div id="successToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                <i class="bi bi-check-circle me-2"></i>
                <span id="successToastMessage">İşlem başarıyla tamamlandı!</span>
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
    
    <div id="warningToast" class="toast align-items-center text-white bg-warning border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                <i class="bi bi-exclamation-triangle me-2"></i>
                <span id="warningToastMessage">Uyarı mesajı!</span>
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

<!-- Belge Yükleme Modal -->
<div class="modal fade" id="belgeYukleModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title">
                    <i class="bi bi-upload me-2"></i>Belge Yükle
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    Aşağıdaki alanlar için belge yüklemeniz gerekmektedir:
                </div>
                <div id="belgeGerektirenAlanlar">
                    <!-- Belge gerektiren alanlar burada listelenecek -->
                </div>
                <div class="mt-3">
                    <label class="form-label">Belge Yükle:</label>
                    <input type="file" class="form-control" id="belgeInput" accept=".pdf,.doc,.docx,.jpg,.jpeg,.png">
                    <small class="text-muted">PDF, Word, JPG, PNG formatları kabul edilir</small>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-warning" onclick="belgeYukleVeBasvuruGonder()">
                    <i class="bi bi-send me-2"></i>Başvuru Gönder
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Global değişkenler - düzenleme modu durumunu takip etmek için
        let duzenlemeModu = false;
        let degisiklikYapildi = false;
        let belgeGerektirenDegisiklik = false;

        // Düzenleme modunu açar - tüm alanları düzenlenebilir hale getirir
        function duzenleModunuAc() {
            duzenlemeModu = true;
            
            // Düzenle butonunu gizle
            document.getElementById('duzenleBtn').style.display = 'none';
            
            // Alt butonları göster (Kaydet, Belge Yükle, İptal)
            document.getElementById('altButonlar').style.display = 'block';
            
            // Uyarı mesajını göster (belge gerektiren alanlar için)
            document.getElementById('uyariMesaji').style.display = 'block';
            
            // Tüm input alanlarını göster, display alanlarını gizle
            const inputs = document.querySelectorAll('input[id$="Input"]');
            const displays = document.querySelectorAll('div[id$="Display"]');
            
            inputs.forEach(input => {
                input.classList.remove('d-none');
                input.classList.add('d-block');
            });
            
            displays.forEach(display => {
                display.classList.add('d-none');
            });
        }

        // Düzenleme modunu kapatır - alanları salt okunur hale getirir
        function duzenleModunuKapat() {
            duzenlemeModu = false;
            degisiklikYapildi = false;
            belgeGerektirenDegisiklik = false;
            
            // Düzenle butonunu göster
            document.getElementById('duzenleBtn').style.display = 'block';
            
            // Alt butonları gizle
            document.getElementById('altButonlar').style.display = 'none';
            
            // Uyarı mesajını gizle
            document.getElementById('uyariMesaji').style.display = 'none';
            
            // Tüm input alanlarını gizle, display alanlarını göster
            const inputs = document.querySelectorAll('input[id$="Input"]');
            const displays = document.querySelectorAll('div[id$="Display"]');
            
            inputs.forEach(input => {
                input.classList.add('d-none');
                input.classList.remove('d-block');
                // Orijinal değerleri geri yükle
                const originalValue = input.getAttribute('data-original');
                input.value = originalValue || '';
            });
            
            displays.forEach(display => {
                display.classList.remove('d-none');
            });
            
            // Butonları pasif yap
            document.getElementById('kaydetBtn').disabled = true;
            document.getElementById('belgeYukleBtn').disabled = true;
        }

        // Input değişikliklerini kontrol eder ve butonları aktif/pasif yapar
        function inputDegisti() {
            degisiklikYapildi = false;
            belgeGerektirenDegisiklik = false;
            
            const inputs = document.querySelectorAll('input[id$="Input"]');
            
            inputs.forEach(input => {
                const originalValue = input.getAttribute('data-original') || '';
                const currentValue = input.value;
                
                if (currentValue !== originalValue) {
                    degisiklikYapildi = true;
                    
                    // Belge gerektiren alan mı kontrol et
                    if (input.getAttribute('data-requires-document') === 'true') {
                        belgeGerektirenDegisiklik = true;
                    }
                }
            });
            
            // Kaydet butonunu aktif/pasif yap
            document.getElementById('kaydetBtn').disabled = !degisiklikYapildi;
            
            // Belge yükle butonunu aktif/pasif yap
            document.getElementById('belgeYukleBtn').disabled = !belgeGerektirenDegisiklik;
        }

        // Belge yükleme modalını açar ve değişiklikleri listeler
        function belgeYukleModalAc() {
            // Belge gerektiren alanları listele
            const belgeGerektirenAlanlar = document.getElementById('belgeGerektirenAlanlar');
            const inputs = document.querySelectorAll('input[id$="Input"][data-requires-document="true"]');
            
            let alanListesi = '';
            inputs.forEach(input => {
                const originalValue = input.getAttribute('data-original') || '';
                const currentValue = input.value;
                
                if (currentValue !== originalValue) {
                    const alanAdi = getAlanAdi(input.id);
                    alanListesi += `
                        <div class="alert alert-warning mb-2">
                            <strong>${alanAdi}:</strong> "${originalValue}" → "${currentValue}"
                        </div>
                    `;
                }
            });
            
            belgeGerektirenAlanlar.innerHTML = alanListesi;
            
            // Modalı aç
            const modal = new bootstrap.Modal(document.getElementById('belgeYukleModal'));
            modal.show();
        }

        // Alan adını okunabilir hale getirir (input ID'sinden kullanıcı dostu isim)
        function getAlanAdi(inputId) {
            const alanAdlari = {
                'firmaAdiInput': 'Firma Adı',
                'domainInput': 'Domain',
                'yetkiliAdiInput': 'Yetkili Kişi Adı',
                'yetkiliSoyadiInput': 'Yetkili Kişi Soyadı',
                'yetkiliTCNoInput': 'TC Kimlik Numarası',
                'vergiNoInput': 'Vergi Numarası'
            };
            
            return alanAdlari[inputId] || inputId.replace('Input', '').replace(/([A-Z])/g, ' $1').trim();
        }

        // Belge yükle ve başvuru gönder - belge gerektiren değişiklikler için
        function belgeYukleVeBasvuruGonder() {
            const belgeInput = document.getElementById('belgeInput');
            
            // Belge seçilip seçilmediğini kontrol et
            if (!belgeInput.files || belgeInput.files.length === 0) {
                showToast('warning', 'Lütfen bir belge seçin!');
                return;
            }
            
            // Belge gerektiren değişiklikleri topla
            const inputs = document.querySelectorAll('input[id$="Input"][data-requires-document="true"]');
            let degisiklikTalepleri = [];
            
            inputs.forEach(input => {
                const originalValue = input.getAttribute('data-original') || '';
                const currentValue = input.value;
                
                if (currentValue !== originalValue) {
                    const alanAdi = getAlanAdi(input.id);
                    degisiklikTalepleri.push({
                        alanAdi: alanAdi,
                        eskiDeger: originalValue,
                        yeniDeger: currentValue
                    });
                }
            });
            
            if (degisiklikTalepleri.length === 0) {
                showToast('warning', 'Değişiklik bulunamadı!');
                return;
            }
            
            // Değişiklik taleplerini sisteme kaydet
            degisiklikTalepleri.forEach(talep => {
                kaydetDegisiklikTalebi(talep.alanAdi, talep.eskiDeger, talep.yeniDeger);
            });
            
            // Başarı mesajı göster
            showToast('success', `${degisiklikTalepleri.length} adet değişiklik talebi başarıyla gönderildi!`);
            
            // Modalı kapat
            const modal = bootstrap.Modal.getInstance(document.getElementById('belgeYukleModal'));
            modal.hide();
            
            // Düzenleme modunu kapat
            duzenleModunuKapat();
            
            // Sayfayı yenile (yeni talepleri görmek için)
            setTimeout(() => {
                location.reload();
            }, 2000);
        }

        // Değişiklik talebini sisteme kaydet - AJAX ile backend'e gönder
        function kaydetDegisiklikTalebi(alanAdi, eskiDeger, yeniDeger) {
            const formData = new FormData();
            formData.append('alanAdi', alanAdi);
            formData.append('eskiDeger', eskiDeger);
            formData.append('yeniDeger', yeniDeger);
            formData.append('degisiklikSebebi', 'Kullanıcı tarafından talep edildi');
            
            // Belge dosyasını ekle
            const belgeInput = document.getElementById('belgeInput');
            if (belgeInput.files && belgeInput.files.length > 0) {
                formData.append('belge', belgeInput.files[0]);
            }
            
            fetch('/FirmaBilgileri/TalepOlustur', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log('Değişiklik talebi kaydedildi:', alanAdi);
                } else {
                    console.error('Değişiklik talebi kaydedilemedi:', data.message);
                }
            })
            .catch(error => {
                console.error('Hata:', error);
            });
        }

        // Toast bildirimi göster - kullanıcıya bilgi vermek için
        function showToast(type, message) {
            let toastElement;
            let messageElement;
            
            if (type === 'success') {
                toastElement = document.getElementById('successToast');
                messageElement = document.getElementById('successToastMessage');
            } else {
                toastElement = document.getElementById('warningToast');
                messageElement = document.getElementById('warningToastMessage');
            }
            
            messageElement.textContent = message;
            const toast = new bootstrap.Toast(toastElement);
            toast.show();
        }

        // Değişiklikleri kaydet - belge gerektirmeyen alanlar için
        function degisiklikleriKaydet() {
            // Burada sadece düzenlenebilir alanlar kaydedilecek
            const inputs = document.querySelectorAll('input[id$="Input"]:not([data-requires-document="true"])');
            let kaydedilecekAlanlar = [];
            
            inputs.forEach(input => {
                const originalValue = input.getAttribute('data-original') || '';
                const currentValue = input.value;
                
                if (currentValue !== originalValue) {
                    const alanAdi = getAlanAdi(input.id);
                    kaydedilecekAlanlar.push({
                        alan: alanAdi,
                        eskiDeger: originalValue,
                        yeniDeger: currentValue
                    });
                }
            });
            
            if (kaydedilecekAlanlar.length > 0) {
                // Burada AJAX ile kaydetme işlemi yapılacak
                console.log('Kaydedilecek alanlar:', kaydedilecekAlanlar);
                showToast('success', 'Değişiklikler başarıyla kaydedildi!');
                
                // Display alanlarını güncelle
                kaydedilecekAlanlar.forEach(alan => {
                    const inputId = alan.alan.replace(/\s+/g, '').toLowerCase() + 'Input';
                    const displayId = inputId.replace('Input', 'Display');
                    
                    const input = document.getElementById(inputId);
                    const display = document.getElementById(displayId);
                    
                    if (input && display) {
                        input.setAttribute('data-original', alan.yeniDeger);
                        display.textContent = alan.yeniDeger;
                    }
                });
                
                // Düzenleme modunu kapat
                duzenleModunuKapat();
            } else {
                showToast('warning', 'Kaydedilecek değişiklik bulunamadı!');
            }
        }

        // Form validation handling - jQuery ile form doğrulama
        $(document).ready(function() {
            // Handle form submissions for update modals
            $('form[asp-action^="Guncelle"]').on('submit', function(e) {
                var form = $(this);
                var input = form.find('input[type="text"], input[type="password"], input[type="email"]');
                var value = input.val().trim();
                
                // Clear previous validation messages
                form.find('.text-danger').text('');
                form.find('.invalid-feedback').hide();
                input.removeClass('is-invalid');
                
                // Check if field is empty
                if (!value) {
                    e.preventDefault();
                    input.addClass('is-invalid');
                    var fieldName = form.find('label').text().replace(' *', '');
                    var errorSpan = form.find('.text-danger');
                    errorSpan.text(fieldName + ' boş olamaz.');
                    return false;
                }
                
                // Additional validation for specific fields
                if (input.attr('asp-for') === 'Sifre' && value.length < 6) {
                    e.preventDefault();
                    input.addClass('is-invalid');
                    var errorSpan = form.find('.text-danger');
                    errorSpan.text('Şifre en az 6 karakter olmalıdır.');
                    return false;
                }
                
                if (input.attr('asp-for') === 'YetkiliTCNo' && value.length !== 11) {
                    e.preventDefault();
                    input.addClass('is-invalid');
                    var errorSpan = form.find('.text-danger');
                    errorSpan.text('TC No 11 haneli olmalıdır.');
                    return false;
                }
                
                if (input.attr('asp-for') === 'VergiNo' && value.length !== 10) {
                    e.preventDefault();
                    input.addClass('is-invalid');
                    var errorSpan = form.find('.text-danger');
                    errorSpan.text('Vergi numarası 10 haneli olmalıdır.');
                    return false;
                }
            });
            
            // Handle form submissions for talep modals
            $('form[asp-action^="Talep"]').on('submit', function(e) {
                var form = $(this);
                var inputs = form.find('input[type="text"], textarea');
                var isValid = true;
                
                // Clear previous validation messages
                form.find('.invalid-feedback').hide();
                inputs.removeClass('is-invalid');
                
                // Check each required field
                inputs.each(function() {
                    var input = $(this);
                    var value = input.val().trim();
                    
                    if (!value) {
                        input.addClass('is-invalid');
                        input.siblings('.invalid-feedback').show();
                        isValid = false;
                    }
                });
                
                // Additional validation for TC No
                var tcInput = form.find('input[name*="TC"]');
                if (tcInput.length > 0) {
                    var tcValue = tcInput.val().trim();
                    if (tcValue && tcValue.length !== 11) {
                        tcInput.addClass('is-invalid');
                        tcInput.siblings('.invalid-feedback').text('TC No 11 haneli olmalıdır.').show();
                        isValid = false;
                    }
                }
                
                if (!isValid) {
                    e.preventDefault();
                    return false;
                }
            });
            
            // Show validation messages on input blur for update modals
            $('form[asp-action^="Guncelle"] input, form[asp-action^="Guncelle"] textarea').on('blur', function() {
                var input = $(this);
                var value = input.val().trim();
                
                if (!value) {
                    input.addClass('is-invalid');
                    var fieldName = input.closest('.modal-body').find('label').text().replace(' *', '');
                    var errorSpan = input.siblings('.text-danger');
                    errorSpan.text(fieldName + ' boş olamaz.');
                } else {
                    input.removeClass('is-invalid');
                    input.siblings('.text-danger').text('');
                    input.siblings('.invalid-feedback').hide();
                }
            });
            
            // Show validation messages on input blur for talep modals
            $('form[asp-action^="Talep"] input, form[asp-action^="Talep"] textarea').on('blur', function() {
                var input = $(this);
                var value = input.val().trim();
                
                if (!value) {
                    input.addClass('is-invalid');
                    input.siblings('.invalid-feedback').show();
                } else {
                    input.removeClass('is-invalid');
                    input.siblings('.invalid-feedback').hide();
                }
            });
            
            // Clear validation on modal close
            $('.modal').on('hidden.bs.modal', function() {
                var modal = $(this);
                modal.find('.is-invalid').removeClass('is-invalid');
                modal.find('.text-danger').text('');
                modal.find('.invalid-feedback').hide();
            });
        });
    </script>
}


